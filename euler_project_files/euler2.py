"""
Time Complexity: O(n), where n is the number of Fibonacci numbers up to 4,000,000
Space Complexity: O(1)
"""


def even_fibonacci_numbers():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
    By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
    find the sum of the even-valued terms.
    """
    a, b = 1, 2
    total = 0
    while a <= 4000000:
        if a % 2 == 0:
            total += a
        a, b = b, a + b
    return total


print(even_fibonacci_numbers())
